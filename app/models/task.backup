package models;

/*import java.util.*;

import play.modules.mongodb.jackson.MongoDB;
import uk.co.panaxiom.playjongo.PlayJongo;
import net.vz.mongodb.jackson.JacksonDBCollection;
import net.vz.mongodb.jackson.Id;
import net.vz.mongodb.jackson.ObjectId;

import org.codehaus.jackson.annotate.JsonProperty;
import org.jongo.MongoCollection;

import javax.persistence.*;

public class Taskbackup{
    
  @Id
  @ObjectId
  public String id;

  public String label;

  private static JacksonDBCollection<Taskbackup, String> coll = MongoDB.getCollection("tasks", Taskbackup.class, String.class);

  /*public static List<Task> all() {
	  
    return Task.coll.find().toArray();
  }
*/
  
  public static List<Taskbackup> all() {

      List<Taskbackup> list = new ArrayList<Taskbackup>();
      Iterator<Taskbackup> it = tasks().find().as(Taskbackup.class).iterator();
      while (it.hasNext()) {
        list.add(it.next());
      }
      return list;
    }
  
  public static MongoCollection tasks() {
      return PlayJongo.getCollection("users");
  }

  
  public static void create(Taskbackup task) {
    Taskbackup.coll.save(task);
  }
  
  

  public static void delete(String id) {
    Taskbackup task = Taskbackup.coll.findOneById(id);
    if (task != null)
        Taskbackup.coll.remove(task);
  }
    
}*/